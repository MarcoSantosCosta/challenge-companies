package com.accenture.challengecompanies.infrastructure.persistence.mappings.address;

import com.accenture.challengecompanies.domain.models.Address;
import com.accenture.challengecompanies.infrastructure.persistence.mappings.company.CompanyMapping;
import com.accenture.challengecompanies.infrastructure.persistence.mappings.supplier.SupplierMapping;
import jakarta.persistence.*;
import lombok.*;

@Entity
@Table(name = "addresses")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@EqualsAndHashCode(of = "id")
public class AddressMapping {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    private String street;
    private int number;
    private String complement;
    private String neighborhood;
    private String city;
    private String state;
    private String zipCode;
    private String country;

    @OneToOne(mappedBy = "address")
    private SupplierMapping supplier;

    @OneToOne(mappedBy = "address")
    private CompanyMapping company;

    public AddressMapping(Address address) {
        this.street = address.getStreet();
        this.number = address.getNumber();
        this.complement = address.getComplement();
        this.neighborhood = address.getNeighborhood();
        this.city = address.getCity();
        this.state = address.getState();
        this.zipCode = address.getZipCode();
        this.country = address.getCountry();
    }

    public Address toModel() {
        return new Address(
                this.getId(),
                this.getStreet(),
                this.getNumber(),
                this.getComplement(),
                this.getNeighborhood(),
                this.getCity(),
                this.getState(),
                this.getZipCode(),
                this.getCountry()
        );

    }
    // Constructors, getters, and setters are automatically generated by Lombok
}
